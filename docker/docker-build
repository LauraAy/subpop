#!/usr/bin/env bash
# -ex:
# bail on errors and show debugging stuff

# - Build the docker image for web

read -r -d '' HELP <<-'EOF'
Options:

  -h    Display this help message

This script will:

   - Build the docker image for web
EOF

################################################################################
### TEMPFILES
# From:
#   http://stackoverflow.com/questions/430078/shell-script-templates
# create a default tmp file name
tmp=${TMPDIR:-/tmp}/prog.$$
# delete any existing temp files
trap "rm -f $tmp.?; exit 1" 0 1 2 3 13 15
# then do
#   ...real work that creates temp files $tmp.1, $tmp.2, ...

################################################################################
#### USAGE AND ERRORS
COMMAND=`basename $0`
# Load basic functions; primarily messaging functions
# Rename file name here to match actual functions
FUNCTIONS="`dirname $0`/bash-functions"
if source "${FUNCTIONS}" ; then
  :
else
  error_no_exit "Functions file not found; expected ${FUNCTIONS}"
  exit 1
fi

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Note that LOGFILE is used by functions for log commands: log_message,
# log_warning, log_error, etc.
#
# replace log file with another value if you want
LOGFILE=LOG_${COMMAND}_`tstamp`.log

usage() {
   echo "Usage: $COMMAND [OPTIONS]"
}

print_help() {
  echo "$HELP"
}

################################################################################
### OPTIONS
###############################################################################
while getopts "h" opt; do
  case $opt in
    h)
      usage
      print_help
      exit 1
      ;;
    \?)
      echo "ERROR Invalid option: -$OPTARG" >&2
      echo ""
      usage
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

###############################################################################
### THESCRIPT
###############################################################################

#----------------------------------------------------------------------------
# Sanity checks
#----------------------------------------------------------------------------

# --- .docker-environment ---
# docker-compose.yml files expect .docker-environment
# TODO maybe make this flexible to use alternate paths?
DOCKER_ENV_FILE="${PWD}/.docker-environment"
if file_exists "$DOCKER_ENV_FILE" DOCKER_ENV_FILE ; then
  # message "Found expected DOCKER_ENV_FILE: $DOCKER_ENV_FILE"
  :
else
  error "No DOCKER_ENV_FILE found; expected: ${DOCKER_ENV_FILE}"
fi



#----------------------------------------------------------------------------
# Build the docker image for web
#----------------------------------------------------------------------------
message "Building docker image"
docker build --tag subpop:latest .

if [[ $? -eq 0 ]]; then
  message "SUCCESS: use docker-deploy to prepare and restart subpop"
else
  error "Error building docker image"
fi


################################################################################
### EXIT
# http://stackoverflow.com/questions/430078/shell-script-templates
rm -f $tmp.?
trap 0
exit 0
