upstream subpop {
  server web:3000;
}

# TODO: Figure out a way to get client IP in a docker-container environment.
#
# When run in a docker container, the actual client IP cannot be determined
# unless docker-daemon is run with `--userland-proxy=false`.  Otherwise,
# $remote_addr and $proxy_add_x_forwarded_for return the IP of the docker
# container, something like `172.18.0.4`.
#
# Below we rely on $http_client_ip being set by the load balancer.

##
# For use later in X-Forwarded-For, we set $ip_for_forward based on
# $http_client_ip *if* it is present; otherwise, we use
# $proxy_add_x_forwarded_for.
#
map $http_client_ip $ip_for_forward {
  # failing other values, return $proxy_add_x_forwarded_for
  default   $proxy_add_x_forwarded_for;

  # if $http_client_ip has content, return it
  ~.        $http_client_ip;
}

server {
  listen 8443 ssl;
  proxy_headers_hash_max_size 2048;
  proxy_headers_hash_bucket_size 256;

  ssl_certificate            /etc/nginx/cert.crt;
  ssl_certificate_key        /etc/nginx/cert.key;

  ssl                        on;
  ssl_session_cache          builtin:1000  shared:SSL:10m;
  ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers                HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
  ssl_prefer_server_ciphers  on;

  # access_log                 /var/log/nginx/subpop.access.log;

  root                       /subpop/public;

  try_files                  $uri/index.html $uri @subpop;

  location @subpop {
    auth_basic               "closed site";
    auth_basic_user_file     /etc/nginx/htpasswd;

    proxy_set_header         HOST $http_host;
    proxy_set_header         X-Forwarded-Proto $scheme;
    proxy_set_header         X-Forwarded-For $ip_for_forward;
    proxy_pass               http://subpop;
    proxy_read_timeout       90;
  }

  error_page                 500 502 503 504 /500.html;
  client_max_body_size       4G;
  keepalive_timeout          10;
}


server {
  listen      8080;
  server_name emeryrdev02.library.upenn.edu;
  return 301 https://emeryrdev02.library.upenn.edu:8443$request_uri;
}
